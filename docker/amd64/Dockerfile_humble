FROM nvcr.io/nvidia/tensorrt:23.10-py3

WORKDIR /ros2_ws/src/inference_ros2
COPY . /ros2_ws/src/inference_ros2
USER root
SHELL ["/bin/bash", "-c"]
ARG PACKAGES="wget software-properties-common gnupg2 curl ffmpeg libsm6 libxext6"

# Install python dependencies
RUN --mount=target=/var/lib/apt/lists,type=cache,sharing=locked \
    --mount=target=/var/cache/apt,type=cache,sharing=locked \
    apt update && \
    apt-get install -y --no-install-recommends $PACKAGES && \
    apt-add-repository universe && \
    apt-add-repository multiverse && \ 
    apt-add-repository restricted && \
    apt autoremove && apt clean

RUN --mount=type=cache,target=/root/.cache/pip \
    python3 -m pip install --upgrade pip

# Run pip install using the download cache
# RUN --mount=type=cache,target=/root/.cache \
#     python3 -m pip install onnxruntime-gpu imutils opencv-python opencv-contrib-python torchvision==0.14.1 torch==1.13.1

RUN --mount=type=cache,target=/root/.cache \
    python3 -m pip install --no-cache-dir -r requirements.txt

RUN apt update && apt install locales && \
    locale-gen en_US en_US.UTF-8 && \
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && \
    LANG=en_US.UTF-8

# Install ROS and use the download cache
RUN --mount=target=/var/lib/apt/lists,type=cache,sharing=locked \
    --mount=target=/var/cache/apt,type=cache,sharing=locked \
    rm -f /etc/apt/apt.conf.d/docker-clean && \
    add-apt-repository universe  && \
    apt update && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
    apt update && \
    apt upgrade -y && \
    apt install -y ros-humble-desktop ros-dev-tools python3-argcomplete && \
    apt install -y qtbase5-dev qtdeclarative5-dev && \
    apt autoremove && \
    rm -rf /var/lib/apt/lists/* && \
    echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc

# Install ByteTrack
WORKDIR /root/
RUN git clone https://github.com/LALWeco/ByteTrack.git && \
    cd ByteTrack && python3 setup.py develop

WORKDIR /ros2_ws/
RUN colcon build 
WORKDIR /ros2_ws/src/inference_ros2

# Set the ROS_DISTRO environment variable
ENV ROS_DISTRO=humble

# Set the entrypoint
ENTRYPOINT ["/ros2_ws/src/inference_ros2/entrypoint.sh"]

# Command to run when starting the container
CMD ["ros2", "run", "inference_ros2", "keypoint_detector_trt"]